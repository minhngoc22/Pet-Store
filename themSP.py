import sys
from PyQt6 import QtWidgets
from PyQt6.QtWidgets import QApplication, QWidget
from PyQt6.QtWidgets import QMessageBox
from UIPython.ui_themSP import Ui_Form  # ƒê·∫£m b·∫£o file t·ªìn t·∫°i
from ketnoiSQL import Database  # ƒê·∫£m b·∫£o file t·ªìn t·∫°i

class EventHandler(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.ui = Ui_Form()  # T·∫°o UI ngay trong constructor
        self.ui.setupUi(self)
        self.image_path = None  # Bi·∫øn l∆∞u ƒë∆∞·ªùng d·∫´n ·∫£nh
        self.db = Database()  # K·∫øt n·ªëi CSDL qua l·ªõp Database

        # K·∫øt n·ªëi s·ª± ki·ªán
        self.ui.btn_chon_anh.clicked.connect(self.choose_image)
        self.ui.cbo_danhmucNCC.currentIndexChanged.connect(self.display_selected_supplier)
        self.load_suppliers()
        self.ui.btn_them.clicked.connect(self.add_product)

    def choose_image(self):
        """Ch·ªçn ·∫£nh t·ª´ m√°y t√≠nh v√† hi·ªÉn th·ªã l√™n QLabel"""
        from PyQt6.QtWidgets import QFileDialog
        from PyQt6.QtGui import QPixmap
        from PyQt6 import QtCore

        file_path, _ = QFileDialog.getOpenFileName(None, "Ch·ªçn ·∫£nh s·∫£n ph·∫©m", "", "Images (*.png *.jpg *.jpeg)")
        if file_path and file_path.strip():
            self.image_path = file_path
            pixmap = QPixmap(file_path).scaled(241, 171, QtCore.Qt.AspectRatioMode.KeepAspectRatio)
            self.ui.lbl_anh.setPixmap(pixmap)

    def load_suppliers(self):
        """T·∫£i danh s√°ch nh√† cung c·∫•p v√†o ComboBox"""
        self.ui.cbo_danhmucNCC.clear()
        suppliers = self.db.execute_query("SELECT supplier_name FROM Suppliers")
        for supplier in suppliers:
            self.ui.cbo_danhmucNCC.addItem(supplier[0])

    def display_selected_supplier(self):
        """Hi·ªÉn th·ªã t√™n nh√† cung c·∫•p ƒë√£ ch·ªçn"""
        supplier_name = self.ui.cbo_danhmucNCC.currentText()
        print(f"Nh√† cung c·∫•p ƒë√£ ch·ªçn: {supplier_name}")


    def add_product(self):
        """X·ª≠ l√Ω s·ª± ki·ªán th√™m s·∫£n ph·∫©m"""
        id = self.ui.txt_maSP.toPlainText().strip()
        name = self.ui.txt_tenSP.toPlainText().strip()
        category = self.ui.cbo_danhmucSP.currentText()
        price = self.ui.txt_giaSP.toPlainText().strip()
        stock_quantity = self.ui.txt_soluongP.toPlainText().strip()
        supplier = self.ui.cbo_danhmucNCC.currentText()
        image_path = self.image_path if self.image_path else ""  # ƒê∆∞·ªùng d·∫´n ·∫£nh

        if not name or not price or not category or not supplier:
            QMessageBox.warning(None, "L·ªói", "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin s·∫£n ph·∫©m!")
            return

        try:
            price = float(price)  # ƒê·∫£m b·∫£o gi√° s·∫£n ph·∫©m l√† s·ªë
            self.db.add_product(id,name, category, price,stock_quantity, supplier, image_path)
            QMessageBox.information(None, "Th√†nh c√¥ng", "S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m v√†o!")
            self.clear_fields()
        except ValueError:
            QMessageBox.warning(None, "L·ªói", "Gi√° s·∫£n ph·∫©m ph·∫£i l√† s·ªë h·ª£p l·ªá!")

    def clear_fields(self):
        """X√≥a d·ªØ li·ªáu trong form sau khi th√™m th√†nh c√¥ng"""
        self.ui.txt_tenSP.clear()
        self.ui.txt_giaSP.clear()
        self.ui.cbo_danhmucNCC.setCurrentIndex(0)
        self.ui.cbo_danhmucNCC.setCurrentIndex(0)
        self.ui.lbl_anh.clear()
        self.image_path = None

if __name__ == "__main__":
    print("üîµ [START] Ch·∫°y giao di·ªán th√™m s·∫£n ph·∫©m...")
    
    app = QApplication(sys.argv)
    window = QWidget()
    ui = Ui_Form()
    ui.setupUi(window)

    handler = EventHandler(ui)  # T·∫°o ƒë·ªëi t∆∞·ª£ng x·ª≠ l√Ω s·ª± ki·ªán

    window.show()
    print("üü¢ [RUNNING] Giao di·ªán ƒëang ch·∫°y...")
    sys.exit(app.exec())
