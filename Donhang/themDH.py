from PyQt6.QtWidgets import QMessageBox
from PyQt6.QtCore import Qt
from PyQt6.QtGui import QStandardItemModel, QStandardItem
from SQL_database.csdl_DH import OrderDatabase
from PyQt6 import QtWidgets
from PyQt6.QtWidgets import QMessageBox
from Donhang.ui_themDH import Ui_Form

class ThemDonHang(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()  # üõ† G·ªçi constructor c·ªßa l·ªõp cha tr∆∞·ªõc
        self.ui = Ui_Form()
        self.ui.setupUi(self)
        self.db = OrderDatabase()
        self.customer_id = None  # L∆∞u ID kh√°ch h√†ng sau khi t√¨m ki·∫øm

        # G√°n s·ª± ki·ªán
        self.ui.btn_them.clicked.connect(self.create_order)
        self.ui.btn_timKH.clicked.connect(self.find_customer)

        self.load_employee_list()
        self.load_status_payment_options()

    def load_employee_list(self):
        """T·∫£i danh s√°ch nh√¢n vi√™n t·ª´ CSDL v√†o cbo_nvxl"""
        employees = self.db.get_all_employees()
        if employees:
            self.ui.cbo_nvxl.addItems(employees)
        else:
            QMessageBox.warning(None, "L·ªói", "Kh√¥ng th·ªÉ t·∫£i danh s√°ch nh√¢n vi√™n!")

    def load_status_payment_options(self):
        """T·∫£i danh s√°ch tr·∫°ng th√°i v√† ph∆∞∆°ng th·ª©c thanh to√°n"""
        self.ui.cbo_trangthai.clear()  # X√≥a d·ªØ li·ªáu c≈© tr∆∞·ªõc khi th√™m m·ªõi
        self.ui.cbo_thanhtoan.clear()

    # C·∫≠p nh·∫≠t ƒë√∫ng gi√° tr·ªã tr·∫°ng th√°i theo database
        self.ui.cbo_trangthai.addItems(["ƒêang x·ª≠ l√Ω", "Ho√†n th√†nh", "ƒêang giao"])
        self.ui.cbo_thanhtoan.addItems(["ƒê√£ thanh to√°n", "Ch∆∞a thanh to√°n"])


    def find_customer(self):
        from Donhang.timKH import TimKhachHang
        self.tim_khach_hang = TimKhachHang(parent_form=self)
        self.tim_khach_hang.show()
    

    def create_order(self):
        customer_code = self.ui.txt_maKH.toPlainText().strip()  # L·∫•y m√£ kh√°ch h√†ng t·ª´ giao di·ªán
        employee_name = self.ui.cbo_nvxl.currentText()  # L·∫•y t√™n nh√¢n vi√™n t·ª´ combobox
        total_amount = float(self.ui.txt_tongtien.toPlainText())  # L·∫•y t·ªïng ti·ªÅn
        status = self.ui.cbo_trangthai.currentText()  # L·∫•y tr·∫°ng th√°i ƒë∆°n h√†ng
        payment = self.ui.cbo_thanhtoan.currentText()  # L·∫•y tr·∫°ng th√°i thanh to√°n
        note = self.ui.txt_note.toPlainText()  # L·∫•y ghi ch√∫

        employee_id = employee_name  # Chuy·ªÉn t√™n nh√¢n vi√™n th√†nh ID

        if total_amount <= 0:
            QMessageBox.warning(None, "L·ªói", "T·ªïng ti·ªÅn kh√¥ng h·ª£p l·ªá!")
            return
        if not total_amount:
            QMessageBox.warning(None, "L·ªói", "Vui l√≤ng nh·∫≠p t·ªïng ti·ªÅn!")
            return

     #‚úÖ L·∫•y customer_id t·ª´ m√£ customer_code n·∫øu ch∆∞a c√≥
        if self.customer_id is None:
            self.customer_id = customer_code

        if not self.customer_id:
            QMessageBox.warning(self, "L·ªói", "Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng!")
            return

        success = self.db.add_order(self.customer_id, employee_id, total_amount, status, payment, note)

        if success:
            QMessageBox.information(self, "Th√†nh c√¥ng", "ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c th√™m!")
            from  Donhang.themCT import ThemChiTiet
            self.them_chitiet = ThemChiTiet()
            self.them_chitiet.show()
            self.close()
        else:
            QMessageBox.warning(self, "L·ªói", "Kh√¥ng th·ªÉ th√™m ƒë∆°n h√†ng!")


  


    



