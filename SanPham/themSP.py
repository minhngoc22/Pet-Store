import sys
from PyQt6 import QtWidgets
from PyQt6.QtWidgets import QApplication, QWidget, QMessageBox, QFileDialog
from PyQt6.QtGui import QPixmap
from PyQt6 import QtCore
from SanPham.ui_themSP import Ui_themsanpham  # ƒê·∫£m b·∫£o file t·ªìn t·∫°i
from SQL_database.csdl_sp import ProductDatabase  # ƒê·∫£m b·∫£o file t·ªìn t·∫°i

class EventHandler(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.ui = Ui_themsanpham()
        self.ui.setupUi(self)
        self.image_path = None  # L∆∞u ƒë∆∞·ªùng d·∫´n ·∫£nh
        self.db = ProductDatabase()  # K·∫øt n·ªëi CSDL

        # K·∫øt n·ªëi s·ª± ki·ªán
        self.ui.btn_chon_anh.clicked.connect(self.choose_image)
        self.ui.cbo_danhmucNCC.currentIndexChanged.connect(self.display_selected_supplier)
        self.ui.cbo_danhmucSP.currentIndexChanged.connect(self.display_selected_category)
        self.ui.btn_them.clicked.connect(self.add_product)

        self.load_suppliers()
        self.load_categories()

    def choose_image(self):
        """Ch·ªçn ·∫£nh t·ª´ m√°y t√≠nh v√† hi·ªÉn th·ªã l√™n QLabel"""
        file_path, _ = QFileDialog.getOpenFileName(self, "Ch·ªçn ·∫£nh s·∫£n ph·∫©m", "", "Images (*.png *.jpg *.jpeg)")
        if file_path:
            self.image_path = file_path
            pixmap = QPixmap(file_path).scaled(241, 171, QtCore.Qt.AspectRatioMode.KeepAspectRatio)
            self.ui.lbl_anh.setPixmap(pixmap)

    def load_suppliers(self):
        """T·∫£i danh s√°ch nh√† cung c·∫•p v√†o ComboBox"""
        self.ui.cbo_danhmucNCC.clear()
        suppliers = self.db.get_all_suppliers()  # L·∫•y t·ª´ CSDL
        self.ui.cbo_danhmucNCC.addItems(suppliers)

    def display_selected_supplier(self):
        """Hi·ªÉn th·ªã t√™n nh√† cung c·∫•p ƒë√£ ch·ªçn"""
        supplier_name = self.ui.cbo_danhmucNCC.currentText()
        print(f"‚úÖ Nh√† cung c·∫•p ƒë√£ ch·ªçn: {supplier_name}")

    def load_categories(self):
        """T·∫£i danh s√°ch danh m·ª•c v√†o ComboBox"""
        self.ui.cbo_danhmucSP.clear()
        categories = self.db.get_all_categories()  # L·∫•y t·ª´ CSDL
        print("üìå Danh m·ª•c trong database:", categories)  # Ki·ªÉm tra danh m·ª•c
        self.ui.cbo_danhmucSP.addItems(categories)

    def display_selected_category(self):
        """Hi·ªÉn th·ªã danh m·ª•c ƒë√£ ch·ªçn"""
        category_name = self.ui.cbo_danhmucSP.currentText()
        print(f"‚úÖ Danh m·ª•c ƒë√£ ch·ªçn: {category_name}")

    def add_product(self):
        """X·ª≠ l√Ω s·ª± ki·ªán th√™m s·∫£n ph·∫©m"""
        id = self.ui.txt_maSP.toPlainText().strip()
        name = self.ui.txt_tenSP.toPlainText().strip()
        category_name = self.ui.cbo_danhmucSP.currentText().strip()
        supplier = self.ui.cbo_danhmucNCC.currentText().strip()
        price_text = self.ui.txt_giaSP.toPlainText().strip()
        stock_text = self.ui.txt_soluongP.toPlainText().strip()
        image_path = self.image_path if self.image_path else ""
        note = self.ui.txt_note.toPlainText().strip()

    # Ki·ªÉm tra d·ªØ li·ªáu nh·∫≠p v√†o
        if not id or not name or not price_text or not stock_text or not category_name or not supplier:
            QMessageBox.warning(self, "L·ªói", "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin s·∫£n ph·∫©m!")
            return

    # Ki·ªÉm tra gi√° v√† s·ªë l∆∞·ª£ng c√≥ h·ª£p l·ªá kh√¥ng
        try:
            price = float(price_text)
            stock_quantity = int(stock_text)
        except ValueError:
            QMessageBox.warning(self, "L·ªói", "Gi√° v√† s·ªë l∆∞·ª£ng ph·∫£i l√† s·ªë h·ª£p l·ªá!")
            return

        # L·∫•y ID danh m·ª•c t·ª´ t√™n
        

        print(f"üìå ƒêang th√™m s·∫£n ph·∫©m: {name}, ID: {id}, Danh m·ª•c : {category_name}, NCC: {supplier}")

        # Th√™m s·∫£n ph·∫©m v√†o CSDL
        success = self.db.add_product(id, name, category_name, price, stock_quantity, supplier, image_path, note)
        if success:
            QMessageBox.information(self, "Th√†nh c√¥ng", "S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m v√†o!")
            self.clear_fields()
        else:
            QMessageBox.warning(self, "L·ªói", "Kh√¥ng th·ªÉ th√™m s·∫£n ph·∫©m v√†o CSDL!")


    def clear_fields(self):
        """X√≥a d·ªØ li·ªáu trong form sau khi th√™m th√†nh c√¥ng"""
        self.ui.txt_maSP.clear()
        self.ui.txt_tenSP.clear()
        self.ui.txt_giaSP.clear()
        self.ui.txt_soluongP.clear()
        self.ui.cbo_danhmucSP.setCurrentIndex(0)
        self.ui.cbo_danhmucNCC.setCurrentIndex(0)
        self.ui.lbl_anh.clear()
        self.image_path = None
        self.ui.txt_note.clear()

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = EventHandler()
    window.show()
    sys.exit(app.exec())
